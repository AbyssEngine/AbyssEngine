name: "CodeQL"

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]
    schedule:
        -   cron: '27 0 * * 6'

jobs:
    analyze:
        name: Analyze (${{ matrix.language }})
        runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
        timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
        permissions:
            security-events: write
            # only required for workflows in private repositories
            actions: read
            contents: read

        strategy:
            fail-fast: false
            matrix:
                include:
                    -   language: c-cpp
                        build-mode: manual
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Export GitHub Actions cache environment variables
                uses: actions/github-script@v6
                with:
                    script: |
                        core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
                        core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

            -   name: Install Dependencies
                run: |
                    sudo apt-get update
                    sudo apt-get install -y build-essential cmake ninja-build libsdl2-dev zlib1g-dev libarchive-dev nasm libxext-dev libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev libegl-dev gperf autoconf-archive libasound2-dev ninja-build

            -   name: Run VCPKG
                uses: lukka/run-vcpkg@v10
                with:
                    vcpkgJsonGlob: "**/vcpkg.json"
                    vcpkgDirectory: "${{ github.workspace }}/vcpkg"
                    vcpkgGitCommitId: "ad3bae57455a3c3ce528fcd47d8e8027d0498add"

            -   name: Configure CMake
                run: >
                    cmake
                    -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
                    -DVCPKG_TARGET_TRIPLET=x64-linux
                    -DCMAKE_CXX_COMPILER=clang++
                    -DCMAKE_C_COMPILER=clang
                    -DCMAKE_BUILD_TYPE=Release
                    -S ${{ github.workspace }}
                    -B ${{ github.workspace }}/build

            # Initializes the CodeQL tools for scanning.
            -   name: Initialize CodeQL
                uses: github/codeql-action/init@v3
                with:
                    languages: ${{ matrix.language }}
                    build-mode: ${{ matrix.build-mode }}

            # If the analyze step fails for one of the languages you are analyzing with
            # "We were unable to automatically build your code", modify the matrix above
            # to set the build mode to "manual" for that language. Then modify this step
            # to build your code.
            # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
            # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
            -   if: matrix.build-mode == 'manual'
                run: |
                    cmake --build ${{ github.workspace }}/build --config Release

            -   name: Perform CodeQL Analysis
                uses: github/codeql-action/analyze@v3
                with:
                    category: "/language:${{matrix.language}}"
        env:
            VCPKG_DEFAULT_TRIPLET: x64-linux
            VCPKG_DEFAULT_HOST_TRIPLET: x64-linux