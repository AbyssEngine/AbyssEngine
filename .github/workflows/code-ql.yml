name: "CodeQL"

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]
    schedule:
        -   cron: '27 0 * * 6'

jobs:
    analyze:
        name: Analyze (${{ matrix.language }})
        runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
        timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
        permissions:
            security-events: write
            # only required for workflows in private repositories
            actions: read
            contents: read

        strategy:
            fail-fast: false
            matrix:
                include:
                    -   language: c-cpp
                        build-mode: manual
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Install Dependencies (Windows)
                if: runner.os == 'Windows'
                uses: lukka/run-vcpkg@v11

            -   name: Install Dependencies (Linux)
                if: runner.os == 'Linux'
                run: |
                    sudo apt-get update
                    sudo apt-get install -y build-essential cmake ninja-build libsdl2-dev zlib1g-dev libarchive-dev

            -   name: Install Dependencies (MacOS)
                if: runner.os == 'MacOS'
                run: |
                    brew update
                    brew install cmake ninja sdl2 zlib libarchive

            -   name: Configure CMake (Windows)
                if: runner.os == 'Windows'
                run: >
                    cmake
                    -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
                    -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}
                    -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
                    -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
                    -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
                    -S ${{ github.workspace }}
                    -B ${{ steps.strings.outputs.build-output-dir }}


            -   name: Configure CMake (Links/macOS)
                if: runner.os != 'Windows'
                run: >
                    cmake
                    -DCMAKE_CXX_COMPILER=clang++
                    -DCMAKE_C_COMPILER=clang
                    -DCMAKE_BUILD_TYPE=Release
                    -S ${{ github.workspace }}
                    -B ${{ steps.strings.outputs.build-output-dir }}

            # Initializes the CodeQL tools for scanning.
            -   name: Initialize CodeQL
                uses: github/codeql-action/init@v3
                with:
                    languages: ${{ matrix.language }}
                    build-mode: ${{ matrix.build-mode }}

            # If the analyze step fails for one of the languages you are analyzing with
            # "We were unable to automatically build your code", modify the matrix above
            # to set the build mode to "manual" for that language. Then modify this step
            # to build your code.
            # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
            # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
            -   if: matrix.build-mode == 'manual'
                run: |
                    cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

            -   name: Perform CodeQL Analysis
                uses: github/codeql-action/analyze@v3
                with:
                    category: "/language:${{matrix.language}}"
